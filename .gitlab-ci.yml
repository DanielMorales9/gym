image: docker:latest
services:
 - docker:dind

variables:
  DOCKER_DRIVER: overlay
  DOCKER_HOST: tcp://docker:2375
  AWS_DOCKER_REGISTRY: 359080832247.dkr.ecr.eu-west-1.amazonaws.com
  AWS_TOKEN: eyJwYXlsb2FkIjoieUJxM1VRa0p2YjVNeHk1d1M1THhXa3JFczRwWGZSeXVjWGdIT25yZHhmUlkrOVJ3VWU0QjYzQ0p1RTExaVJoYTFCWTI1K1pnRGpwUTk0NXpickExRms5ZFk3STZWa3FOQkl0bTMxZk93cW9VTEIxRU43V3VYd3Y0NlNlQktRRit5R1FqVkpvc0t4SXMxY1gyeUdmSno3VExPbUM5STg0UGJTUnRORWQvYlZuREZncmlseldtRk9LelhSVkdsTHFzdndPSEczMEhrbmFsNzVhK25PTTJ5cFNEZmdZaW9ZcHZLMWVuU1dqNFBaZHdoaytUR0U4WlBuYmtLM0EycXk0NmhMUTNYWjQ0OXZZODZZb01HQjZEUnBOWDFManRsdU9oYm5Ra2tONkdnRnh5WVpPWFVGcWtSRzdMWW96R0NXWE8zaHhkYUxvTDhETlFaQStmZ2JYT0lVbUhhbXZuQ21ReGoxUVV2NStiOWRWdlQxS0tldFRvZWVOUDhBQ3hIMXp3dENQMFBzb0piZEFxeG9yUlp5TzlxN25NNm1SalpqRTNnbWxjZzRnYUlMcmtIdjdhZGJKTnFkK3ltMUwzckR4YjZUdDJVUW4rMUszdkVTeTUrZlVpQlVILzVwN25UYWxmV3o4UUF0c1BwZm9Yck1Ma2xTajBiZE0xcCs0eXJ1aEdtWXJqOG1RR2xtUFZud2hEQVcrbnBYejVyZGNsWS9zdXJUcUdZc3hxWHd3VnBMU0toNTN5bHBtWkpmeUZHbVBmR1BYY3NEOU5WMm9TZDRpKzkxOWtEMmtxZjlEWU5nK3lHcGdkZ3JxeU10dmhLVG1BL2pVY3EvNEJDME9td1MvR3Zob0d3TGxZWHZkcXI0ZUZWaFJjOW14dUc5TndDTEZGOEIxTUhxOTJxandIUHg4Ymlvc1V2amV1eUZOYlB2Ymo3L1pFbkIwUHJveUwrU0wxK1NIMWpENlh0UFNwWXZ0ZEJtdlFnOHZsR1BBdWpxZ2pMdmhucGdmWTF0OVJXQWlOQ0R5ZVp0SkRHSTNSeHNTU0NOWjY5SGRaMWZoSUlWa1RNTXdORjkxV3JNY2kxR2h3T0NqbTZBL3hqdExQYjU4cHIza1BvZkJndXJUdVFTSnRxVFJCemc5c01vNE5oYWRrU0R6Mm9EenFMTks4ZVRSQzF1T1hhQ1ZtVTBrU2ExTUl2R1BLMEJwZXJiODVkdW5rOXQrUWpCZW9uMHhaaVZEVmc1WCt5RjN3cFR6cnNHUDRMOVRLck5uQVI4SDR2ejk0Wm0xVzVzMEdDN0pZbnIzWmhUWlhHN05KV245MGR5b2lvaXZ3bERBMllUZGtYbnRvMGl6eWN3bHlSZzdRWVRkNnJxRCtoNDBtMDU0alk3UStSc2VYVVhyZFYvVTBGSUlYVE5mdUcyQ3U0UWdYM1Y3N0tIcVZWNjloeFhQbFcrNHl6cmVKKzBETWswZndCTncvWTR1Ym1oUFdsWnJGdmNNT1FCZGQwemh4IiwiZGF0YWtleSI6IkFRRUJBSGgrZFMrQmxOdTBOeG5Yd293YklMczExNXlqZCtMTkFaaEJMWnN1bk94azNBQUFBSDR3ZkFZSktvWklodmNOQVFjR29HOHdiUUlCQURCb0Jna3Foa2lHOXcwQkJ3RXdIZ1lKWUlaSUFXVURCQUV1TUJFRURMRit2ZWFLdnNoNk53L1daZ0lCRUlBN3R2cmdkVE1KYk55NEc1aFJaTHJRMEdPQUJvcklhZ3h0WHJnUXo3T2h0amZWKzFkR2dwdzhhMFZXcGxSNkpUM1N4S3dTSzlIR0hNR0p0Rlk9IiwidmVyc2lvbiI6IjIiLCJ0eXBlIjoiREFUQV9LRVkiLCJleHBpcmF0aW9uIjoxNTQxMjI1OTc3fQ==
  TAG: 0.0.1-SNAPSHOT

stages:
- build
- test
- package
- install

cache:
  paths:
  - ui/node
  - ui/node_modules

maven-build:
  before_script:
  - "apt-get -qq -y install wget"
  - "wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - "
  - "sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list'"
  - "apt-get -y update"
  - "apt-get -y install google-chrome-stable"
  image: maven:3-jdk-8
  stage: build
  script: "mvn compile"
  artifacts:
    paths:
    - ui/target/*
    - api/target/*
    - gateway/target/*

maven-test:
  before_script:
  - "apt-get -qq -y install wget"
  - "wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - "
  - "sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list'"
  - "apt-get -y update"
  - "apt-get -y install google-chrome-stable"
  image: maven:3-jdk-8
  stage: test
  script: "mvn test"
  artifacts:
    paths:
    - ui/target/*
    - api/target/*
    - gateway/target/*


docker-build:
  before_script:
  - "apt-get -qq -y install wget"
  - "wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - "
  - "sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list'"
  - "apt-get -y update"
  - "apt-get -y install google-chrome-stable"
  image: maven:3-jdk-8
  stage: package
  script:
  - "mvn package"
  artifacts:
    paths:
    - ui/target/*
    - api/target/*
    - gateway/target/*

docker-package:
  stage: install
  script:
  - docker login -u AWS -p $AWS_TOKEN https://$AWS_DOCKER_REGISTRY/
  - docker tag tenentedan9/ui:$TAG $AWS_DOCKER_REGISTRY/ui:$TAG
  - docker tag tenentedan9/gateway:$TAG $AWS_DOCKER_REGISTRY/gateway:$TAG
  - docker tag tenentedan9/api:$TAG $AWS_DOCKER_REGISTRY/api:$TAG
  - docker push $AWS_DOCKER_REGISTRY/ui:$TAG
  - docker push $AWS_DOCKER_REGISTRY/gateway:$TAG
  - docker push $AWS_DOCKER_REGISTRY/api:$TAG
  artifacts:
    paths:
    - ui/target/*
    - api/target/*
    - gateway/target/*

